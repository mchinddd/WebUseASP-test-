-- Tạo database
CREATE DATABASE StudentManagementDB;
GO

USE StudentManagementDB;
GO

-- Tạo bảng Roles (Vai trò)
CREATE TABLE Roles (
    RoleID INT PRIMARY KEY IDENTITY(1,1),
    RoleName NVARCHAR(50) NOT NULL UNIQUE
);
GO

-- Thêm dữ liệu vai trò
INSERT INTO Roles (RoleName) VALUES 
('Admin'),
('Teacher'),
('Student');
GO

-- Tạo bảng Users (Người dùng)
CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY(1,1),
    Username NVARCHAR(50) NOT NULL UNIQUE,
    Password NVARCHAR(255) NOT NULL,
    FullName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    Phone NVARCHAR(20),
    RoleID INT NOT NULL,
    CreatedDate DATETIME DEFAULT GETDATE(),
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);
GO

-- Tạo bảng Students (Sinh viên)
CREATE TABLE Students (
    StudentID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL UNIQUE,
    StudentCode NVARCHAR(20) NOT NULL UNIQUE,
    DateOfBirth DATE NOT NULL,
    Gender NVARCHAR(10) CHECK (Gender IN ('Male', 'Female', 'Other')),
    Address NVARCHAR(255),
    ClassID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
GO

-- Tạo bảng Teachers (Giảng viên)
CREATE TABLE Teachers (
    TeacherID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL UNIQUE,
    TeacherCode NVARCHAR(20) NOT NULL UNIQUE,
    Department NVARCHAR(100),
    Specialization NVARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
GO

-- Tạo bảng Classes (Lớp học)
CREATE TABLE Classes (
    ClassID INT PRIMARY KEY IDENTITY(1,1),
    ClassName NVARCHAR(50) NOT NULL,
    TeacherID INT,
    AcademicYear NVARCHAR(20),
    FOREIGN KEY (TeacherID) REFERENCES Teachers(TeacherID)
);
GO

-- Thêm khóa ngoại cho bảng Students
ALTER TABLE Students
ADD FOREIGN KEY (ClassID) REFERENCES Classes(ClassID);
GO

-- Tạo bảng Subjects (Môn học)
CREATE TABLE Subjects (
    SubjectID INT PRIMARY KEY IDENTITY(1,1),
    SubjectName NVARCHAR(100) NOT NULL,
    Credits INT NOT NULL,
    Description NVARCHAR(255)
);
GO

-- Tạo bảng Grades (Điểm số)
CREATE TABLE Grades (
    GradeID INT PRIMARY KEY IDENTITY(1,1),
    StudentID INT NOT NULL,
    SubjectID INT NOT NULL,
    Score FLOAT NOT NULL CHECK (Score BETWEEN 0 AND 10),
    Semester INT,
    CreatedDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID)
);
GO

-- Tạo bảng Attendances (Điểm danh)
CREATE TABLE Attendances (
    AttendanceID INT PRIMARY KEY IDENTITY(1,1),
    StudentID INT NOT NULL,
    ClassID INT NOT NULL,
    AttendanceDate DATE NOT NULL,
    MorningSession BIT DEFAULT 0,
    AfternoonSession BIT DEFAULT 0,
    Notes NVARCHAR(255),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (ClassID) REFERENCES Classes(ClassID)
);
GO

-- Tạo bảng SystemSettings (Cài đặt hệ thống)
CREATE TABLE SystemSettings (
    SettingID INT PRIMARY KEY IDENTITY(1,1),
    SettingName NVARCHAR(100) NOT NULL UNIQUE,
    SettingValue NVARCHAR(255) NOT NULL,
    Description NVARCHAR(255)
);
GO

-- Bảng xác thực
CREATE TABLE Authentication (
    UserID INT PRIMARY KEY,
    PasswordHash NVARCHAR(255) NOT NULL,
    PasswordSalt NVARCHAR(255) NOT NULL,
    LastLogin DATETIME,
    FailedLoginAttempts INT DEFAULT 0,
    IsLocked BIT DEFAULT 0,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Bảng Refresh Token (cho JWT)
CREATE TABLE RefreshTokens (
    TokenID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL,
    Token NVARCHAR(255) NOT NULL,
    Expires DATETIME NOT NULL,
    Created DATETIME NOT NULL DEFAULT GETDATE(),
    Revoked DATETIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

INSERT INTO [dbo].[Users] (Username, Password, FullName, Email, Phone, RoleID, CreatedDate, IsActive)
VALUES ('hs001', '123456', N'Nguyễn Văn A', 'a@example.com', '0123456789', 3, GETDATE(), 1);



-- Thêm 10 user cho học sinh
INSERT INTO Users (Username, Password, FullName, Email, Phone, RoleID)
VALUES
('hs002', '123456', N'Trần Thị Đạt', 'hs002@example.com', '0900000002', 3),
('hs003', '123456', N'Lê Văn CHính', 'hs003@example.com', '0900000003', 3),
('hs004', '123456', N'Phạm Thị Dũng', 'hs004@example.com', '0900000004', 3),
('hs005', '123456', N'Võ Văn Em', 'hs005@example.com', '0900000005', 3),
('hs006', '123456', N'Bùi Thị Fương', 'hs006@example.com', '0900000006', 3),
('hs007', '123456', N'Hoàng Văn Giang', 'hs007@example.com', '0900000007', 3),
('hs008', '123456', N'Ngô Thị Hạnh', 'hs008@example.com', '0900000008', 3),
('hs009', '123456', N'Đỗ Văn Ien', 'hs009@example.com', '0900000009', 3),
('hs010', '123456', N'Phan Thị Jung', 'hs010@example.com', '0900000010', 3);
DECLARE @UserID INT = SCOPE_IDENTITY();
-- Thêm 10 học sinh tương ứng
INSERT INTO [dbo].[Students] (UserID, StudentCode, DateOfBirth, Gender, Address, ClassID)
VALUES
(4, 'HS002', '2007-08-20', 'Female', N'Hà Nội', NULL),
(5, 'HS003', '2006-11-05', 'Male', N'Hải Phòng', NULL),
(6, 'HS004', '2007-01-12', 'Female', N'Nam Định', NULL),
(7, 'HS005', '2007-09-25', 'Male', N'Thái Bình', NULL),
(8, 'HS006', '2006-07-14', 'Female', N'Quảng Ninh', NULL),
(9, 'HS007', '2007-03-08', 'Male', N'Hà Nam', NULL),
(10, 'HS008', '2006-12-30', 'Female', N'Ninh Bình', NULL),
(11, 'HS009', '2007-10-10', 'Male', N'Bắc Ninh', NULL),
(12, 'HS010', '2007-06-22', 'Female', N'Hưng Yên', NULL);


INSERT INTO [dbo].[Students] (UserID, StudentCode, DateOfBirth, Gender, Address, ClassID)
VALUES (@UserID, 'HS001', '2007-05-15', N'Male', N'Hà Nội', NULL);

SELECT s.StudentID, s.StudentCode, u.FullName, u.Email, s.DateOfBirth, s.Gender
FROM Students s
JOIN Users u ON s.UserID = u.UserID;

-- Thêm tài khoản Admin
INSERT INTO Users (Username, Password, FullName, Email, Phone, RoleID)
VALUES (
    'admin01',
    '123456',  -- mật khẩu test, chưa mã hóa
    N'Quản trị viên hệ thống',
    'admin@example.com',
    '0123456789',
    (SELECT RoleID FROM Roles WHERE RoleName = 'Admin')
);

-- Thêm tài khoản Teacher
INSERT INTO Users (Username, Password, FullName, Email, Phone, RoleID)
VALUES (
    'teacher01',
    '123456', -- mật khẩu test, chưa mã hóa
    N'Nguyễn Văn Giảng Viên',
    'teacher@example.com',
    '0987654321',
    (SELECT RoleID FROM Roles WHERE RoleName = 'Teacher')
);

-- Gán TeacherCode cho Teacher vừa tạo
INSERT INTO Teachers (UserID, TeacherCode, Department, Specialization)
VALUES (
    (SELECT UserID FROM Users WHERE Username = 'teacher01'),
    'GV001',
    N'Khoa Công nghệ Thông tin',
    N'Lập trình Web'
);

-- Thêm tài khoản Teacher
INSERT INTO Users (Username, Password, FullName, Email, Phone, RoleID)
VALUES (
    'teacher02',
    '123456', -- mật khẩu test, chưa mã hóa
    N'Nguyễn Văn Minh',
    'teacher1@example.com',
    '0941515487',
    (SELECT RoleID FROM Roles WHERE RoleName = 'Teacher')
);

-- Gán TeacherCode cho Teacher vừa tạo
INSERT INTO Teachers (UserID, TeacherCode, Department, Specialization)
VALUES (
    (SELECT UserID FROM Users WHERE Username = 'teacher02'),
    'GV002',
    N'Khoa Thiết kế đồ họa',
    N'Thiết kế 3D'
);

-- Thêm tài khoản Teacher
INSERT INTO Users (Username, Password, FullName, Email, Phone, RoleID)
VALUES (
    'teacher05',
    '123456', -- mật khẩu test, chưa mã hóa
    N'Nguyễn Văn Sấu',
    'teacher05@example.com',
    '0941515357',
    (SELECT RoleID FROM Roles WHERE RoleName = 'Teacher')
);

-- Gán TeacherCode cho Teacher vừa tạo
INSERT INTO Teachers (UserID, TeacherCode, Department, Specialization)
VALUES (
    (SELECT UserID FROM Users WHERE Username = 'teacher04'),
    'GV004',
    N'Khoa Truyền thông tin',
    N'Quảng bá, quảng cáo và tiếp thị'
);

SET IDENTITY_INSERT Teachers ON;

INSERT INTO Teachers (TeacherID, UserID, TeacherCode, Department, Specialization)
VALUES (2,  (SELECT UserID FROM Users WHERE Username = 'teacher05'), 'GV005',  N'Khoa Ngôn Ngữ', 'Chuyên ngành Du Lịch');

SET IDENTITY_INSERT Teachers OFF;


UPDATE Students
SET ClassID = 
    CASE 
        WHEN StudentID BETWEEN 1 AND 6 THEN 7430 -- IT
        WHEN StudentID BETWEEN 7 AND 10 THEN 4971 -- Marketing
        ELSE 7452 -- Graphic Design
    END
WHERE ClassID IS NULL;

SET IDENTITY_INSERT Classes ON;

INSERT INTO Classes (ClassID, ClassName, TeacherID, AcademicYear)
VALUES 
(7430, 'Information Technology', 1, '2025'),
(4971, 'Digital Marketing', 3, '2025'),
(7452, 'Graphic Design', 2 , '2025');

SET IDENTITY_INSERT Classes OFF;  

INSERT INTO Subjects (SubjectName, Credits, Description)
VALUES 
(N'Toán cao cấp', 3, N'Môn học nền tảng về toán học bậc đại học, bao gồm vi phân và tích phân.'),
(N'Lập trình C#', 4, N'Giới thiệu và thực hành lập trình bằng ngôn ngữ C#, bao gồm OOP.'),
(N'Cơ sở dữ liệu', 3, N'Học về thiết kế, cài đặt và quản trị cơ sở dữ liệu quan hệ.'),
(N'Kỹ thuật phần mềm', 3, N'Phương pháp và quy trình phát triển phần mềm.'),
(N'Mạng máy tính', 3, N'Kiến thức cơ bản về mạng máy tính, giao thức và cấu trúc mạng.'),
(N'Anh văn chuyên ngành', 2, N'Training English skills for IT and computer science.'),
(N'Phát triển Web', 4, N'Thực hành xây dựng ứng dụng web với HTML, CSS, JavaScript và framework.'),
(N'Trí tuệ nhân tạo', 3, N'Giới thiệu về AI, machine learning và ứng dụng thực tế.');

INSERT INTO Grades (StudentID, SubjectID, Score, Semester)
VALUES
-- HS001
(1, 1, 8.5, 1),
(1, 2, 9.0, 1),
(1, 3, 7.5, 1),

-- HS002
(10, 1, 7.8, 1),
(10, 2, 8.2, 1),
(10, 3, 8.0, 1),

-- HS003
(11, 4, 6.5, 1),
(11, 5, 7.0, 1),
(11, 6, 6.8, 1),

-- HS004
(12, 4, 8.0, 1),
(12, 5, 8.5, 1),
(12, 6, 8.3, 1),

-- HS005
(13, 6, 7.2, 1),
(13, 7, 7.9, 1),
(13, 8, 7.5, 1),

-- HS006
(14, 6, 8.9, 1),
(14, 7, 9.1, 1),
(14, 8, 8.8, 1),

-- HS007
(15, 1, 6.8, 1),
(15, 2, 7.4, 1),
(15, 3, 6.9, 1),

-- HS008
(16, 1, 8.1, 1),
(16, 2, 8.7, 1),
(16, 3, 8.4, 1),

-- HS009
(17, 4, 7.0, 1),
(17, 5, 7.5, 1),
(17, 6, 7.2, 1),

-- HS010
(18, 4, 9.2, 1),
(18, 5, 9.5, 1),
(18, 6, 9.0, 1);

ALTER TABLE Subjects ADD TeacherID INT NULL;
ALTER TABLE Subjects ADD GradeOrClass NVARCHAR(50) NULL;
ALTER TABLE Subjects ADD IsActive BIT NOT NULL DEFAULT 1;

UPDATE [dbo].[Subjects]
SET GradeOrClass = 
    CASE 
        WHEN SubjectID = 1 THEN 'Nam 2 - Ky 2' -- IT
        WHEN SubjectID = 2 THEN 'Nam 1 - Ky 1' -- Marketing
		WHEN SubjectID = 2 THEN 'Nam 2 - Ky 1'
		WHEN SubjectID = 2 THEN 'Nam 2 - Ky 1'
		WHEN SubjectID = 2 THEN 'Nam 1 - Ky 1'
		WHEN SubjectID = 2 THEN 'Nam 2 - Ky 1'
		WHEN SubjectID = 2 THEN 'Nam 2 - Ky 1'
        ELSE 'Nam 2 - Ky 2' -- Graphic Design
    END
WHERE GradeOrClass IS NULL;

SELECT s.SubjectID, s.SubjectName, s.TeacherID, t.TeacherID, u.FullName
FROM Subjects s
LEFT JOIN Teachers t ON s.TeacherID = t.TeacherID
LEFT JOIN Users u ON t.UserID = u.UserID
WHERE s.TeacherID = 2;


DBCC CHECKIDENT ('Teachers', RESEED, 2);

DBCC CHECKIDENT ('Teachers', NORESEED);

UPDATE Teachers SET TeacherID = 2 WHERE TeacherID = 3;
UPDATE Teachers SET TeacherID = 3 WHERE TeacherID = 4;

CREATE TABLE Schedules (
    ScheduleID INT IDENTITY(1,1) PRIMARY KEY,
    ClassID INT NOT NULL,
    SubjectID INT NOT NULL,
    TeacherID INT NULL,
    DayOfWeek INT NOT NULL, 
    StartTime TIME NOT NULL,
    EndTime TIME NOT NULL,

    CONSTRAINT FK_Schedules_Classes FOREIGN KEY (ClassID) REFERENCES Classes(ClassID),
    CONSTRAINT FK_Schedules_Subjects FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID),
    CONSTRAINT FK_Schedules_Teachers FOREIGN KEY (TeacherID) REFERENCES Teachers(TeacherID)
);

INSERT INTO Schedules (ClassID, SubjectID, TeacherID, DayOfWeek, StartTime, EndTime)
VALUES 
(4971, 1, 1, 2, '07:30', '09:00'),
(7430, 2, 2, 2, '09:15', '10:45'),
(7452, 3, 3, 3, '07:30', '12:00');

INSERT INTO Attendances (StudentID, ClassID, AttendanceDate, MorningSession, AfternoonSession, Notes)
VALUES (1, 4971, '2025-08-12', 1, 0, 'Vắng buổi chiều vì ốm'),
       (10, 7430, '2025-09-12', 1, 0, 'Nghỉ không phép');